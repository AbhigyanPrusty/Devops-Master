name: DevSecOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tfsec:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          format: sarif
          additional_args: "--out tfsec-results.sarif"

      - name: Upload tfsec report
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-reports
          path: tfsec-results.sarif

  trivy:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    needs: tfsec
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Run Trivy scan
        run: |
          trivy image --format table --output trivy-results.txt myapp:latest
          trivy image --format sarif --output trivy-results.sarif myapp:latest

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-results.txt
            trivy-results.sarif

  deploy:
    name: Trigger AWS CodePipeline
    runs-on: ubuntu-latest
    needs: trivy
    env:
      AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        if: ${{ env.AWS_KEY != '' && env.AWS_SECRET != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger AWS CodePipeline
        if: ${{ env.AWS_KEY != '' && env.AWS_SECRET != '' }}
        run: |
          aws codepipeline start-pipeline-execution \
            --name DevOps2025Pipeline \
            --region ap-south-1
